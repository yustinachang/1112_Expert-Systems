(deftemplate sales (slot id) (multislot items))
(deftemplate record (slot id) (multislot pair))
(deftemplate combination (multislot pair) (slot number))

(deffacts initial (phase load-data))

(defrule assert-data
	(phase load-data)
	=>
	(load-facts "sales-03.txt")
	(open "result.txt" out "w")
)

(defrule assert-record-and-combination
	(phase load-data)
	(sales (id ?id) (items $? ?item1 $? ?item2 $?))
	=>
	(assert (record (id ?id) (pair ?item1 ?item2)))
	(assert (combination (pair ?item1 ?item2) (number 0)))
)

(defrule change-phase
	(declare (salience -10))
	?t <- (phase load-data)
	=>
	(retract ?t)
	(assert (phase count-number))
)

(defrule add-number
	(phase count-number)
	?t1 <- (record (id ?) (pair $?pair))
	?t2 <- (combination (pair $?pair) (number ?n))
	=>
	(retract ?t1 ?t2)
	(assert (combination (pair $?pair) (number (+ ?n 1))))
)

(defrule output-max
	(declare (salience -10))
	(phase count-number)
	(combination (pair $?pair) (number ?n1))
	(not	(combination (pair $?) (number ?n2&:(> ?n2 ?n1))))
	=>
	(printout out $?pair ":" ?n1 crlf)
)

(defrule end
	(declare (salience -100))
	?t <- (phase count-number)
	=>
	(retract ?t)
	(close out)
)
	